import { NextRequest, NextResponse } from "next/server";
import { getCurrentUser } from "./services/AuthService";

// ‚úÖ Role-based private route ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø TypeScript type ‡¶°‡¶ø‡¶´‡¶æ‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
type Role = keyof typeof roleBasedPrivateRoutes;

// ‚úÖ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ì ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶™‡ßá‡¶ú‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ route ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
const authRoutes = ["/login", "/register"];

// ‚úÖ Role ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶≠‡ßá‡¶ü ‡¶∞‡ßÅ‡¶ü ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
const roleBasedPrivateRoutes = {
  user: [/^\/user/, /^\/create-shop/], // üîπ user ‡¶∞‡ßã‡¶≤‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶∞‡ßÅ‡¶ü
  admin: [/^\/admin/], // üîπ admin ‡¶∞‡ßã‡¶≤‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶∞‡ßÅ‡¶ü
};

// ‚úÖ Middleware ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶Ø‡¶æ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü‡ßá‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶¨‡ßá
export const middleware = async (request: NextRequest) => {
  const { pathname } = request.nextUrl; // üîπ ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® URL ‡¶•‡ßá‡¶ï‡ßá path ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
  const userInfo = await getCurrentUser(); // üîπ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá

  // ‚úÖ ‡¶Ø‡¶¶‡¶ø ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶≤‡¶ó‡¶á‡¶® ‡¶®‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶•‡¶æ‡¶ï‡ßá
  if (!userInfo) {
    // üîπ ‡¶Ø‡¶¶‡¶ø ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ "/login" ‡¶¨‡¶æ "/register" ‡¶™‡ßá‡¶ú‡ßá ‡¶Ø‡ßá‡¶§‡ßá ‡¶ö‡¶æ‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶¨‡ßá
    if (authRoutes.includes(pathname)) {
      return NextResponse.next();
    } else {
      // üîπ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶™‡ßá‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ "/login" ‡¶è ‡¶∞‡¶ø‡¶°‡¶æ‡¶á‡¶∞‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá
      return NextResponse.redirect(
        new URL(
          `http://localhost:3000/login?redirectPath=${pathname}`, // üîπ ‡¶∞‡¶ø‡¶°‡¶æ‡¶á‡¶∞‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá ‡¶™‡¶∞ ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶™‡ßá‡¶ú‡ßá‡¶∞ ‡¶™‡¶æ‡¶• ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
          request.url
        )
      );
    }
  }

  // ‚úÖ ‡¶Ø‡¶¶‡¶ø ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶•‡¶æ‡¶ï‡ßá ‡¶è‡¶¨‡¶Ç ‡¶§‡¶æ‡¶∞ role ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶§‡¶ø ‡¶•‡¶æ‡¶ï‡ßá
  if (userInfo.role && roleBasedPrivateRoutes[userInfo?.role as Role]) {
    const routes = roleBasedPrivateRoutes[userInfo?.role as Role]; // üîπ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∞‡ßã‡¶≤ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶∞‡ßÅ‡¶ü ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
    // üîπ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ path ‡¶Ø‡¶¶‡¶ø role-based private route ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶∏‡ßá‡¶∏ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶®
    if (routes.some((route) => pathname.match(route))) {
      return NextResponse.next();
    }
  }
  return NextResponse.redirect(new URL("/", request.url)); // üîπ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡ßá‡¶ú‡ßá ‡¶Ø‡ßá‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶π‡ßã‡¶Æ ‡¶™‡ßá‡¶ú‡ßá ‡¶∞‡¶ø‡¶°‡¶æ‡¶á‡¶∞‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá
};

// ‚úÖ Middleware ‡¶ï‡ßã‡¶® ‡¶ï‡ßã‡¶® ‡¶™‡¶æ‡¶•‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßá ‡¶§‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
export const config = {
  matcher: [
    "/login",
    "/create-shop",
    "/admin",
    "/admin/:page",
    "/user",
    "/user/:page",
  ],
};
